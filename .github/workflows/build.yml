name: Build EXE

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 使用更轻量的 GUI 库
        pip install customtkinter==5.2.2
        pip install requests==2.31.0
        pip install pyautogui==0.9.54
        pip install keyboard==0.13.5
        pip install Pillow==10.0.0
        pip install pyinstaller==6.4.0
    
    - name: Create runtime hook
      shell: powershell
      run: |
        $hookContent = @'
        import os
        import sys
        import atexit

        def cleanup():
            """清理函数"""
            if hasattr(os, "killpg"):
                os.killpg(os.getpgid(0), 9)
            else:
                os._exit(0)

        # 注册清理函数
        atexit.register(cleanup)

        # 确保配置文件目录存在并设置正确的权限
        if getattr(sys, "frozen", False):
            try:
                # 尝试在程序目录保存
                app_dir = os.path.dirname(sys.executable)
                os.makedirs(app_dir, exist_ok=True)
            except Exception:
                # 如果程序目录无法写入，使用用户目录
                app_dir = os.path.expanduser("~")
                config_dir = os.path.join(app_dir, "OCR-GPT")
                os.makedirs(config_dir, exist_ok=True)
                # 修改 sys 路径，确保配置管理器能找到正确的目录
                if config_dir not in sys.path:
                    sys.path.insert(0, config_dir)
        '@
        
        if (-not (Test-Path "hooks")) {
            New-Item -ItemType Directory -Path "hooks"
        }
        $hookContent | Out-File -FilePath "hooks/rthook.py" -Encoding utf8
    
    - name: Build EXE
      shell: powershell
      run: |
        pyinstaller --noconfirm --onefile --windowed --noupx `
          --exclude-module matplotlib `
          --exclude-module numpy `
          --exclude-module pandas `
          --exclude-module scipy `
          --exclude-module PyQt5 `
          --runtime-hook "hooks/rthook.py" `
          --icon=ai.png `
          --add-data "ai.png;." `
          --add-data "config_manager.py;." `
          --add-data "hooks/rthook.py;hooks" `
          --name "OCR-GPT" `
          text_search.py
    
    - name: Create Release and Upload Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ./dist/OCR-GPT.exe
        name: Release ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 